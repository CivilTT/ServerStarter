<base:GeneralCB x:Class="Server_GUI2.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:svgc="http://sharpvectors.codeplex.com/svgc/"
        xmlns:ui="http://schemas.modernwpf.com/2019"
        xmlns:property="clr-namespace:Server_GUI2.Properties"
        xmlns:local="clr-namespace:Server_GUI2"
        xmlns:vm="clr-namespace:Server_GUI2.Windows.MainWindow"
        xmlns:base="clr-namespace:Server_GUI2.Windows"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance vm:MainWindowVM}"
        ResizeMode="CanMinimize"
        ui:WindowHelper.UseModernWindowStyle="True"
        Closing="OnClosing"
        Title="Server Starter" Height="630" Width="630" WindowStartupLocation="CenterScreen">
    
    <Window.Resources>
        <Style TargetType="Button" x:Key="RunStyle" BasedOn="{StaticResource {x:Type Button}}">
            <Style.Setters>
                <Setter Property="Width" Value="140"/>
                <Setter Property="Height" Value="40"/>
                <Setter Property="FontSize" Value="30"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Padding" Value="0 0 0 0"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Background" Value="#7CBB00"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="8">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#90D000"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#5FAD00"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#939393"/>
                    <Setter Property="Opacity" Value="0.2"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="Button" x:Key="OtherStyle" BasedOn="{StaticResource {x:Type Button}}">
            <Style.Setters>
                <Setter Property="Width" Value="140"/>
                <Setter Property="Height" Value="35"/>
                <Setter Property="FontSize" Value="18"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Padding" Value="0 0 0 0"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            CornerRadius="8">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#888888"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#424242"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#939393"/>
                    <Setter Property="Opacity" Value="0.2"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="Button" x:Key="MiniButton" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Width" Value="33"/>
            <Setter Property="Height" Value="33"/>
            <Setter Property="Padding" Value="3"/>
        </Style>
        <Style TargetType="ComboBox" x:Key="ComboStyle" BasedOn="{StaticResource {x:Type ComboBox}}">
            <Style.Setters>
                <Setter Property="Width" Value="200"/>
                <Setter Property="Height" Value="33"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="MaxDropDownHeight" Value="165"/>
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="ui:ThemeManager.ActualTheme" Value="Dark">
                    <Setter Property="Background" Value="#262626"/>
                </Trigger>
                <Trigger Property="ui:ThemeManager.ActualTheme" Value="Light">
                    <Setter Property="Background" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="Line" x:Key="LineStyle">
            <Style.Setters>
                <Setter Property="X1" Value="30"/>
                <Setter Property="X2" Value="595"/>
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="ui:ThemeManager.ActualTheme" Value="Dark">
                    <Setter Property="Stroke" Value="White"/>
                </Trigger>
                <Trigger Property="ui:ThemeManager.ActualTheme" Value="Light">
                    <Setter Property="Stroke" Value="Black"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="TextBox" x:Key="BoxStyle" BasedOn="{StaticResource {x:Type TextBox}}">
            <Style.Setters>
                <Setter Property="Width" Value="253"/>
                <Setter Property="Height" Value="33"/>
                <Setter Property="FontSize" Value="18"/>
                <Setter Property="Background" Value="#EBEBEB"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="BorderThickness" Value="0"/>
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--//Converter//-->
        <vm:ExistsVersionConverter x:Key="ExistsConverter"/>
        <vm:NewVersionConverter x:Key="NewConverter"/>
        <vm:WorldConverter x:Key="WorldConverter"/>
        <base:InverseBoolConverter x:Key="InverseBool"/>
        <BooleanToVisibilityConverter x:Key="BoolToVisible"/>
        <base:ValueConverterGroup x:Key="InverseBoolToVisible">
            <base:InverseBoolConverter/>
            <BooleanToVisibilityConverter/>
        </base:ValueConverterGroup>
    </Window.Resources>

    <!--<Window.DataContext>
        <vm:MainWindowVM/>
    </Window.DataContext>-->
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0*"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <Image Source="pack://application:,,,/Resources/MainWindow/main_image.png" Grid.Column="1" VerticalAlignment="Top"/>
        <TextBlock Text="Server Starter for Minecraft" HorizontalAlignment="Left" Margin="30,15,0,0" VerticalAlignment="Top" FontSize="32" Foreground="White" Grid.Column="1" FontWeight="Bold"/>
        <TextBlock Text="{Binding PlayerName}" HorizontalAlignment="Right" TextWrapping="Wrap" VerticalAlignment="Top" Margin="0 30 40 0" FontSize="18" Foreground="White" TextAlignment="Right" FontWeight="Bold"  Grid.Column="1"/>
        <TextBlock Text="{Binding StarterVersion}" HorizontalAlignment="Right" VerticalAlignment="Top" FontSize="16" Foreground="White" Margin="0 155 40 0" Grid.Column="1"/>

        <Line Stroke="White" StrokeThickness="2" X1="30" Y1="65" X2="595" Y2="65" Grid.Column="1"/>

        <StackPanel HorizontalAlignment="Left" VerticalAlignment="Top" Margin="30,200" Width="253" Orientation="Vertical" Grid.Column="1">
            <TextBlock Text="{x:Static property:Resources.Main_ServerVersion}" HorizontalAlignment="Left" Height="33" VerticalAlignment="Top" Width="140" FontSize="20"/>
            <StackPanel Orientation="Horizontal">
                <ComboBox SelectedItem="{Binding ExistsVersionIndex.Value}" ItemsSource="{Binding ExistsVersions}" DisplayMemberPath="Name" Margin="0,0,20,0" Style="{StaticResource ComboStyle}"/>
                <Button Command="{Binding DeleteCommand}" CommandParameter="version" Visibility="{Binding ShowNewVersions, Converter={StaticResource InverseBoolToVisible}}" Style="{StaticResource MiniButton}">
                    <!--svgコンテンツはResource、コピーする、の設定をpropertiyから行う必要あり-->
                    <svgc:SvgViewbox Source="pack://application:,,,/Resources/MainWindow/trash-alt-regular.svg"/>
                </Button>
            </StackPanel>
            <ComboBox SelectedItem="{Binding NewVersionIndex.Value}" ItemsSource="{Binding NewVersions}" Margin="0 10 0 0" Width="253" Visibility="{Binding ShowNewVersions, Converter={StaticResource BoolToVisible}}" Style="{StaticResource ComboStyle}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Converter={StaticResource NewConverter}}"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <StackPanel Orientation="Horizontal" Margin="0 5">
                <ui:ToggleSwitch Header="{x:Static property:Resources.Main_Show}" OffContent="Release" OnContent="All" FontSize="18" Width="140" Visibility="{Binding ShowNewVersions, Converter={StaticResource BoolToVisible}}" IsEnabled="{Binding ShowSpigot.Value, Converter={StaticResource InverseBool}}" IsOn="{Binding ShowAll.Value}"/>
                <ui:ToggleSwitch Header="{x:Static property:Resources.Main_Spigot}" OffContent="{x:Static property:Resources.No}" OnContent="{x:Static property:Resources.Yes}" FontSize="18" Visibility="{Binding ShowNewVersions, Converter={StaticResource BoolToVisible}}" IsOn="{Binding ShowSpigot.Value}"/>
            </StackPanel>
        </StackPanel>
        
        <StackPanel HorizontalAlignment="Right" VerticalAlignment="Top" Margin="30,200" Orientation="Vertical" Grid.Column="1">
            <TextBlock Text="{x:Static property:Resources.Main_WorldName}" Height="33" FontSize="20" TextAlignment="Left"/>
            <StackPanel Orientation="Horizontal">
                <ComboBox SelectedItem="{Binding WorldIndex.Value}" ItemsSource="{Binding Worlds}" DisplayMemberPath="DisplayName" Margin="0,0,20,0" Style="{StaticResource ComboStyle}"/>
                <Button Command="{Binding DeleteCommand}" CommandParameter="world" Visibility="{Binding ShowNewWorld, Converter={StaticResource InverseBoolToVisible}}" Style="{StaticResource MiniButton}">
                    <!--svgコンテンツはResource、コピーする、の設定をpropertiyから行う必要あり-->
                    <svgc:SvgViewbox Source="pack://application:,,,/Resources/MainWindow/trash-alt-regular.svg"/>
                </Button>
            </StackPanel>

            <TextBox Text="{Binding NewWorldName, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Visibility="{Binding ShowNewWorld, Converter={StaticResource BoolToVisible}}" Margin="0 10" Style="{StaticResource BoxStyle}"/>
        </StackPanel>

        <Button Command="{Binding RunCommand}" Content="{x:Static property:Resources.Main_Run}" Margin="0,335,30,0" HorizontalAlignment="Right" VerticalAlignment="Top" Grid.Column="1" IsEnabled="{Binding CanRun}" Style="{StaticResource RunStyle}"/>

        <Line StrokeThickness="0.3" Y1="390" Y2="390" Grid.Column="1" Style="{StaticResource LineStyle}"/>

        <StackPanel Orientation="Vertical" Margin="50,400,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Column="1">
            <CheckBox Content="{x:Static property:Resources.Main_ReWorld}" FontSize="16" IsChecked="{Binding ResetWorld.Value}"/>
            <CheckBox Content="{x:Static property:Resources.Main_SaveWorld}" FontSize="16" Margin="40,0,0,10" IsChecked="{Binding SaveWorld}" IsEnabled="{Binding ShowSaveWorld}"/>

            <CheckBox Content="{Binding OpContents}" FontSize="16" IsChecked="{Binding OwnerHasOp}" Visibility="{Binding HasOwner, Converter={StaticResource BoolToVisible}}"/>
            <CheckBox Content="{x:Static property:Resources.Main_Shutdown}" FontSize="16" IsChecked="{Binding ShutdownPC}" Command="{Binding SetShutdown}"/>
        </StackPanel>
        <Line Stroke="#FFBDBCBC" StrokeThickness="1" X1="61" Y1="425" X2="61" Y2="448" Grid.Column="1"/>
        <Line Stroke="#FFBDBCBC" StrokeThickness="1" X1="61" Y1="448" X2="91" Y2="448" Grid.Column="1"/>


        <Button VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="40" Margin="30,0,0,10" Grid.Column="1" Command="{Binding SettingCommand}" Style="{StaticResource OtherStyle}">
            <svgc:SvgViewbox Source="pack://application:,,,/Resources/MainWindow/setting.svg" Margin="4"/>
        </Button>
        <StackPanel HorizontalAlignment="Right" Height="40" VerticalAlignment="Bottom" Margin="0,0,0,10" Orientation="Horizontal" Grid.Column="1">
            <Button Content="{x:Static property:Resources.Main_WorldSettings}" Command="{Binding WorldSettingCommand}" IsEnabled="{Binding CanRun}" Style="{StaticResource OtherStyle}"/>
            <Button Content="{x:Static property:Resources.Close}" Margin="10,0,30,0" Command="{Binding CloseCommand}" Style="{StaticResource OtherStyle}"/>
        </StackPanel>
    </Grid>
</base:GeneralCB>